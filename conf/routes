# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Javascript Routes
GET     /assets/javascripts/routes          controllers.Application.javascriptRoutes()

# Home page
GET     /                           controllers.Application.index()

# Alarms
GET     /openAlarms             controllers.Application.openAlarms()          
#GET     /alarms                controllers.Application.alarms()
GET     /pastAlarmsFromCalle/:calleeId   controllers.Application.getPastAlarmsFromCallee(calleeId: Long)
GET     /pastAlarmsFromPatient/:patientId   controllers.Application.getPastAlarmsFromPatient(patientId: Long)
GET     /alarm/:id              controllers.Application.getAlarm(id: Long)
POST    /alarm                  controllers.Application.newAlarm()
#POST    /alarm/:id/delete       controllers.Application.deleteAlarm(id: Long)
#POST    /assignAlarm/           controllers.Application.assignAlarm()
#POST    /dispatchAlarm/         controllers.Application.dispatchAlarm()
POST    /alarm/assign           controllers.Application.assignAlarmFromJson()
POST    /alarm/close           controllers.Application.closeCase()
POST    /alarm/save           controllers.Application.saveCase()
POST    /alarm/saveAndFollowup           controllers.Application.saveAndFollowupCase()

GET     /callee/:id              controllers.Application.getCalleeFromAlarm(id: Long)
GET     /prospectPatient/:id     controllers.Application.getProspectPatients(id: Long)
#GET     /patientsByAddress/:address     controllers.Application.getPatientsByAddress(address: String)
POST    /patient/new                    controllers.Application.insertPatientFromJson()

#POST   /addPatientAndNoteAndClose       controllers.Application.addPatientAndNoteAndClose()
#POST   /addPatientAndNoteAndGoForward   controllers.Application.addPatientAndGoForward()

# Attendants          
GET     /attendants                  controllers.AttendantControler.attendants()
POST    /attendants                  controllers.AttendantControler.newAttendant()
POST    /attendants/:id/delete       controllers.AttendantControler.deleteAttendant(id: Long)

# ComponentReading          
GET     /component/:readingType/                  controllers.ComponentReadingController.getReadingsPerType(readingType: String)

# Websockets
GET     /assets.javascript.ws.js        controllers.Application.wsJs()
GET     /wsInterface                    controllers.Application.wsInterface()


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

GET     /webjars/*file                    controllers.WebJarAssets.at(file)